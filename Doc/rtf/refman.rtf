{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment RFM69 }RFM69}
{\comment Generato daDoxgyen. }
{\creatim \yr2018\mo2\dy15\hr1\min10\sec0}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt RFM69}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Versione \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Gio 15 Feb 2018 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sommario\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Driver Arduino per i moduli radio RFM69\par \pard\plain 
{\tc \v Driver Arduino per i moduli radio RFM69}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\b Autore} : No\'E8 Archimede Pezzoli ({\f2 noearchimede@gmail.com})\par
 {\b Data} : Febbraio 2018\par
 {\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 Introduzione} \par}
La libreria {\b RFM69} permette di collegare due microcontrollori tramite una coppia di moduli radio della famiglia {\b RFM69} di HopeRF, in particolare del modello {\f2 RFM69HCW}.\par
Il codice della libreria \'E8 ampiamente commentato in italiano. I commenti normali ({\f2 // ...} ), presenti soprattutto nei files di implementazione ({\f2 .cpp} ), forniscono dettagli sull'implementazione. I commenti "speciali" ({\f2 //! ...}  o {\f2 /*! ... */} ) sono concentrati nel file header e costituiscono una documentazione per l'utilizzatore della libreria che non desidera conoscere i dettagli del suo funzionamento. Questa documentazione pu\'F2 essere riunita da Doxygen in un unico file o pagina html; la versione html pi\'F9 recente \'E8 consultabile {\f2 qui}. {\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 Indice} \par}
{\f2 1. Caratteristiche del modulo radio}\par
 {\f2 2. Protocollo di comunicazione}\par
 {\f2 3. Collisioni}\par
 {\f2 4. Hardware}\par
 {\f2 5. Struttura dei messaggi}\par
 {\f2 6. Esempio di utilizzo}\par
{\f2 Documentazione} {\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \par
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 1. Caratteristiche del modulo radio } \par}
\par
\par
Caratteristiche principali dei moduli radio RFM69HCW:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
frequenza: 315, 433, 868 oppure 915 MHz (esistono quattro versioni per adattarsi alle bande utilizzabili senza licenza in diversi paesi)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
potenza di emissione: da -18dBm a +20dBm (100mW)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sensdibilit\'E0: fino a -120dBm (con bassa bitrate)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bitrate fino a 300'000 Baud\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
modulazioni: FSK, GFSK, MSK, GMSK, OOK\par}
\par
I messaggi possono includere un controllo CRC16 di due bytes che riduce drasticamente la probabilit\'E0 di errore durante la trasmissione. Possono inoltre essere criptati secondo l'algoritmo Avanced Encryption Standard AES-128 con una chiave di 16 bytes per impedirne la lettura da parte di eventuali terze radio. La possibilit\'E0 offerta dal modulo di assegnare ad ogni modulo un indirizzo unico in modo da creare una rete con fino a 255 dispositivi nonb \'E8 sfruttata, ma un risultato simile \'E8 ottenibile creando una rete in cui ogni radio ha una sync word unica che pu\'F2 sostituire temporaneamente con quella di un'altra radio (ottenuta da una tabella pubblica) per inviare un messaggio a quella radio. Questo permette di creare una rete di dimensione arbitraria (\'E8 possibile impostare fino a 8 byte di sync word, per un totale di 2^64 indirizzi possibili) ma non di inviare messaggi broadcast, come invece il sistema di addressing incluso nel modulo permetterebbe.\par
\par
 Corrente di alimentazione richiesta (a 3.3V), per modalit\'E0:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Sleep: 0.0001 mA\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Standby: 1.25 mA\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Rx: 16 mA\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tx: 16 - 130 mA a seconda della potenza di trasmissione\par}
\par
\par
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 2. Protocollo di comunicazione } \par}
\par
\par
Il protocollo di comunicazione alla base di questa classe presuppone che in una stessa banda di frequenza siano presenti esattamente due radio che condividono la stessa sync word. La stessa frequenza pu\'F2 quindi essere utilizzata anche da altri dispositivi; naturalmente, per\'F2, se dispositivi trasmittenti sulla stessa frequenza trasmettono dati nell stesso momento nessuno di essi ricever\'E0 un mesaggio valido (a meno che la differenza nella potenza trasmessa sia abbastanza grande da permettere al segnale pi\'F9 forte di "coprire" il pi\'F9 debole, in tal caso solo il dispositivo ricevente il pi\'F9 forte otterr\'E0 un messaggio).\par
Alla lettura di ogni messaggio la radio ricevente pu\'F2 trasmettere automaticamente un segnale di ACK se la radio trasmittente lo ha richiesto. In questo modo se l'utente deve essere certo che un messaggio trasmesso sia stato ricevuto e letto (quindi certamente anche utilizzato, visto che la lettura avviene solo su richiesta dell'utente e non automaticamente come la ricezione) non deve n\'E9 implementare un sistema di ACK n\'E9 modificare il codice ricevente, e il segnale di ACK sar\'E0 il meno dispendioso possibile in termini di tempo del programma.\par
Gli schemi sottostanti illustrano la trasmissione di un mesasggio.\par
1 - con ACK: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid mod       ?   |    tx    |            rx             |        def\par
fz          INVIA       ISR                         ISR\par
A       ------|----------|---------------------------|-------------------->\par
RF             |||MESS|||                    ^^^^^^^\par
|              vvvvvvvv                      ||ACK||\par
B       ------------------|-----------------|-------|--------------------->\par
fz                       ISR              LEGGI    ISR\par
mod             rx        |       stby      |  tx   |          def\par
}
\par
2 - senza ACK: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid mod       ?   |    tx    |              def\par
fz          INVIA       ISR\par
A       ------|----------|--------------------------------->\par
RF             |||MESS|||\par
|              vvvvvvvvv\par
B       ------------------|-----------------|--------------->\par
fz                       ISR              LEGGI\par
mod             rx        |       stby      |       def\par
}
\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 A, B} : Programma delle stazioni radio, evoluzione nel tempo\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 fz} : funzioni chiamate. {\f2 invia()}  e {\f2 leggi()}  sono chiamate dall'utente, {\f2 isr()}  \'E8 l'interrupt service routine della classe\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 mod} : modalit\'E0 della radio. {\f2 tx}  = trasmissione, {\f2 rx}  = ricezione, {\f2 stby}  = standby, {\f2 def} : la modalit\'E0 che l'utente ha scelto come default per quella radio\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 RF} : presenza di segnali radio e loro direzione\par}
\par
\par
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 3. Collisioni } \par}
\par
\par
Le funzioni di questa classe non impediscono che le due radio trasmettano dei messaggi contemporaneamente. Questo problema deve essere gestito come possibile dal codice dell'utente. Tuttavia le funzioni della classe in caso di conflitto impediscono la perdita di entrambi i messaggi (cosa che potrebbe portare a un blocco senza uscita se entrambi i programmi cercassero di reinviare subito il proprio messaggio). D\'E0 quindi la priorit\'E0 ai messaggi gi\'E0 arrivati a scapito di quelli in uscita, che potrebbero perdersi.\par
Lo schema sottostante mostara i momenti in cui non si pu\'F2 o non si dovrebbe trasmettere. Il primo schema si riferisce ai messaggi con richiesat di ACK, il secondo a quelli senza.\par
1 - con ACK: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid stato tx                    |*********|############ 1 ############|\par
A           ----------------|---------|---------------------------|---------->\par
|                         INVIA      ISR                         ISR\par
|                                    ISR              LEGGI    ISR\par
B           ---------------------------|-----------------|-------|----------->\par
stato tx            |####### 2 ########|                 |*******|\par
}
\par
2 - Senza ACK: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid stato tx                    |*********|######## 3 #######|\par
A           ----------------|---------|----------------------------->\par
|                         INVIA      ISR\par
|                                    ISR              LEGGI\par
B           ---------------------------|-----------------|----------->\par
stato tx            |######## 2 #######|\par
}
\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
[]: nessuna restrizione, \'E8 il momento giusto per trasmettere un messaggio\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
[{\f2 ***} ]: impossibile trasmettere, {\f2 invia()}  aspetta che sia di nuovo possibile (ma al massimo 50 ms)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
[{\f2 ###} ]: la funzione {\f2 invia()}  non dovrebbe mai essere chiamata qui.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 1} ]: In teoria non bisognerebbe trasmettere (l'altra radio non \'E8 in modalit\'E0 rx), ma in realt\'E0 se l'utente chiama {\f2 invia()}  mentre la classe aspetta un ack per il messaggio precedente significa che l'utente ha rinunciato a controllare quell'ack. In tal caso {\f2 invia()}  si comporta come se il messaggio precedente non avesse contenuto una richiesta di ack. Probabilmente questo messaggio andr\'E0 perso, ma il compito della funzione {\f2 invia()}  non \'E8 aspettare l'ack precedente (quello \'E8 compito dell'utente, anche se lo aspettasse per un certo tempo {\f2 invia()}  non potrebbe segnalare se \'E8 arrivato o no). La sequenza corretta sarebbe:\par
```cpp inviaConAck(); aspettaAck(); // contiene un timeout if(ackRicevuto()) invia(); // prossimo messaggio ``` oppure\par
```cpp inviaConAck(); delay(x); // potrebbero essere altre funzioni if(ackRicevuto()) invia(); // prossimo messaggio rinunciaAck(); // smetti di aspettare l'ACK ``{\f2 } \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\f2 [} 2`]: Momento critico: se si chiama invia() qui ci sar\'E0 una collisione con l'invia() della radio A e entrambi i messaggi saranno persi, ma questa classe non ha modo di evitarlo. Spetta all'utente impedire queste collisioni o saperle gestire.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 3} ]: I messaggi inviati qui saranno persi. \'C8 un difetto dei messaggi senza ACK.\par}
\par}
\par
\par
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 4. Hardware } \par}
\par
\par
Come gi\'E0 detto ho scritto questa classe in particolare per il modulo RFM69HCW di HopeRF, in commercio sia da solo sia inserito in altri moduli che offrono, ad esempio, un logic level shifting da 5V a 3.3V (ad es. Adafruit vende {\f2 https://www.adafruit.com/product/3071} per la maggior parte dei paesi, tra cui tutti quelli europei, e {\f2 https://www.adafruit.com/product/3070} per gli USA e pochi altri).\par
Il modulo comunica con il microcontrollore tramite SPI, deve poter chiamare un'interrupt su quest'ultimo e pu\'F2 "affidargli" il proprio pin di reset (non veramente sfruttato da questa classe, ma se \'E8 gi\'E0 connesso deve essere gestito per evitare reset indesiderati). Deve essere alimentato con una tensione di 3.3V.\par
\par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b RFM69} \cell }{uC  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{MISO \cell }{MISO \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{MOSI \cell }{MOSI \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SCK \cell }{SCK \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{NSS \cell }{I/O {\f2 *}  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{DIO0 \cell }{INT {\f2 **}  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RESET {\f2 &} }  \cell }{{\i I/O {\f2 *} }  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 &} : Opzionale\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 *} : OUT \'E8 qualsiasi pin di input/output (sar\'E0 configurato come output dalla classe)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 **} : INT \'E8 un pin capace di attivare un interupt del microcontrollore. Ad esempio su Atmega328p, il microcontrollore di Arduino UNO, si possono usare i pin 4 e 5, cio\'E9 rispettivamente 2 e 3 nell'ambiete di programmazione Arduino.\par}
\par
\par
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 5. Struttura dei messaggi } \par}
\par
\par
Tutti i messaggi inviati con le funzioni di questa classe hanno la seguente struttura:\par
\par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx1458
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx7290
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Preamble \cell }{Sync word \cell }{Lunghezza \cell }{Intestazione \cell }{Contenuto \cell }{CRC  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx1458
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx7290
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PREAMBLE_SIZE \cell }{SYNC_SIZE \cell }{1 \cell }{1 \cell }{lunghezza \cell }{2 \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx1458
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx7290
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{01010101... \cell }{SYNC_VAL \cell }{lunghezza \cell }{intestazione \cell }{messaggio \cell }{crc \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
La prima riga \'E8 la lunghezzza della sezione in bytes, la seconda \'E8 il suo contenuto.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 PREAMBLE_SIZE} , {\f2 SYNC_SIZE}  e {\f2 SYNC_VAL}  sono costanti definite nel file "RFM69_impostazioni.h".\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 lunghezza}  e {\f2 messaggio}  sono gli argomenti della funzione {\f2 invia()} .\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 intestazione}  \'E8 un byte generato dalle funzioni di invio e letto da quelle di ricezione, inaccessibile all'utente.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 crc}  \'E8 un Cyclic Redundancy Checksum generato dalla radio.\par}
\par
\par
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 6. Esempio di utilizzo } \par}
\par
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid #include <Arduino.h>\par
#include "RFM69.h"\par
\par
\par
// #define MODULO_r o MODULO_t per compilare rispettivamente il programma per la\par
// radio ricevente o per quella trasmittente.\par
//------------------------------------------------------------------------------\par
#define MODULO_r\par
// #define MODULO_t\par
//------------------------------------------------------------------------------\par
\par
\par
\par
\par
// telecomando\par
#ifdef MODULO_r\par
// Pin SS, pin Interrupt, (eventualmente pin Reset)\par
RFM69 radio(2, 3);\par
// Un LED, 0 per non usarlo\par
#define LED 4\par
#endif\par
\par
// quadricotetro\par
#ifdef MODULO_t\par
// Pin SS, pin Interrupt, (eventualmente pin Reset)\par
RFM69 radio(A2, 3, A3);\par
// Un LED, 0 per non usarlo\par
#define LED 7\par
#endif\par
\par
\par
\par
\par
void setup() \{\par
\par
    Serial.begin(115200);\par
    if(LED) pinMode(LED, OUTPUT);\par
\par
    // Inizializza la radio. Deve essere chiamato una volta all'inizio del programma.\par
    // Restituisce 0\par
    int initFallita = radio.inizializza(4);\par
    if(initFallita) \{\par
        // Stampa l'errore riscontrato (questa funzione pesa quasi 0.5 kB)\par
        radio.stampaErroreSerial(Serial, initFallita);\par
        // Inizializzazione fallita, blocca il progrmma\par
        while(true);\par
    \}\par
\}\par
\par
\par
\par
\par
#ifdef MODULO_t\par
\par
\par
void loop()\{\par
\par
    // crea un messaggio\par
    uint8_t lung = 4;\par
    uint8_t mess[lung] = \{0,0x13, 0x05, 0x98\};\par
\par
    unsigned long t;\par
    bool ok;\par
\par
    while(true) \{\par
\par
        // Aggiorna messaggio\par
        mess[0] = (uint8_t)radio.nrMessaggiInviati();\par
\par
        Serial.print("Invio...");\par
        if(LED) digitalWrite(LED, HIGH);\par
\par
        // Registra tempo di invio\par
        t = millis();\par
\par
        // Invia\par
        radio.inviaConAck(mess, lung);\par
        // Aspetta fino alla ricezione di un ack o al timeout impostato nella classe\par
        while(radio.aspettaAck());\par
        // Controlla se \'E8 arrivato un Ack (l'attesa pu\'F2 finire anche senza ack, per timeout)\par
        if(radio.ricevutoAck()) ok = true;  else ok = false;\par
\par
        // calcola il tempo trascorso dall'invio\par
        t = millis() - t;\par
\par
        if(LED) digitalWrite(LED, LOW);\par
\par
        if(ok) \{\par
            Serial.print(" mess #");\par
            Serial.print(radio.nrMessaggiInviati());\par
            Serial.print(" trasmesso in ");\par
            Serial.print(t);\par
            Serial.print(" ms");\par
        \}\par
        else \{\par
            Serial.print(" messaggio #");\par
            Serial.print(radio.nrMessaggiInviati());\par
            Serial.print(" perso");\par
        \}\par
        Serial.println();\par
\par
        delay(1000);\par
    \}\par
\}\par
\par
#endif\par
\par
\par
\par
#ifdef MODULO_r\par
\par
\par
void loop()\{\par
\par
    // metti la radio in modalit\'E0 ricezione\par
    radio.iniziaRicezione();\par
\par
    // aspetta un messaggio\par
    while(!radio.nuovoMessaggio());\par
\par
    if(LED) digitalWrite(LED, HIGH);\par
\par
    // ottieni la dimensione del messaggio ricevuto\par
    uint8_t lung = radio.dimensioneMessaggio();\par
    // crea un'array in cui copiarlo\par
    uint8_t mess[lung];\par
    // leggi il messaggio\par
    int erroreLettura = radio.leggi(mess, lung);\par
    // ora `mess` contiene il messaggio e `lung` corrisponde alla lunghezza del\par
    // messaggio (in questo caso corrispondeve anche prima, ma avrebbe anche\par
    // potuto essere pi\'F9 grande, ad. es. se mess. fosse stato un buffer generico\par
    // gi\'E0 allocato alla dimensione del messaggio pi\'F9 lungo possibile)\par
\par
    if (erroreLettura) \{\par
        Serial.print("Errore lettura");\par
    \}\par
    else \{\par
        Serial.print("Messaggio (");\par
        Serial.print(lung);\par
        Serial.print(" bytes): ");\par
        for(int i = 0; i < lung; i++) \{\par
            Serial.print(" 0x");\par
            Serial.print(mess[i], HEX);\par
        \}\par
        Serial.print("  rssi: ");\par
\par
        // Ottieni il valore RSSI del segnale che ha portato questo messaggio\par
        Serial.print(radio.rssi());\par
    \}\par
    Serial.println();\par
\par
    delay(50);\par
    if(LED) digitalWrite(LED, LOW);\par
\par
\}\par
#endif\par
}
 \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice dei tipi composti\par \pard\plain 
{\tc \v Indice dei tipi composti}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Elenco dei tipi composti\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Queste sono le classi, le struct, le union e le interfacce con una loro breve descrizione:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b RFM69::Errore} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contenitore dell'{\f2 enum}  {\b Errore::ListaErrori} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RFM69} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver per i moduli radio RFM69 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice dei file\par \pard\plain 
{\tc \v Indice dei file}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Elenco dei file\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Questo \'E8 un elenco dei file documentati con una loro breve descrizione:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b /Users/noe/Documents/Robot/Librerie/RFM69/Esempi/{\b Esempio_base.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esempio semplice ma abbastanza completo dell'utilizzo della classe {\b RFM69} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header della classe {\b RFM69} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_comunicazione.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione delle principali funzioni pubbliche della classe {\b RFM69} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_costanti_impostazione.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costanti per l'impostazione della radio RFM69 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_impostazioni.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
File di configurazione del modulo radio RFM69 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_inizializzazione.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione delle funzioni di inizializzazione della classe {\b RFM69} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_registri.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registri della radio RFM69 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_SPI.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione della comunicazione SPI con la radio RFM69 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/noe/Documents/Robot/Librerie/RFM69/Test/{\b main.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esempio semplice ma abbastanza completo dell'utilizzo della classe {\b RFM69} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentazione delle classi{\tc \v Documentazione delle classi}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct RFM69::Errore\par \pard\plain 
{\tc\tcl2 \v RFM69::Errore}
{\xe \v RFM69::Errore}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contenitore dell'{\f2 enum}  {\b Errore::ListaErrori}. }}\par
{
{\f2 #include <RFM69.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipi pubblici\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ListaErrori} \{ {\b ok} = 0, 
{\b errore} = 1, 
{\b initTroppeRadio} = 2, 
{\b initInitSPIFallita} = 3, 
{\b initNessunaRadioConnessa} = 4, 
{\b initVersioneRadioNon0x24} = 5, 
{\b initPinInterruptNonValido} = 6, 
{\b initErroreImpostazione} = 7, 
{\b inviaMessaggioVuoto} = 8, 
{\b inviaTimeoutTxPrecedente} = 9, 
{\b leggiNessunMessaggio} = 10, 
{\b leggiArrayTroppoCorta} = 11, 
{\b messaggioTroppoLungo} = 12, 
{\b modImpossibile} = 13, 
{\b modTimeout} = 14
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lista degli errori che le funzioni della classe possono restituire. }}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contenitore dell'{\f2 enum}  {\b Errore::ListaErrori}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
vedi {\b ListaErrori} per dettagli sui codici di errore \par
}{
Definizione alla linea 387 del file RFM69.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei tipi enumerati (enum)\par
\pard\plain 
{\xe \v ListaErrori\:RFM69::Errore}
{\xe \v RFM69::Errore\:ListaErrori}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b RFM69::Errore::ListaErrori}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lista degli errori che le funzioni della classe possono restituire. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tutte le funzioni di {\b RFM69} che restituiscono un codice di errore utilizzano questa {\f2 enum}  per definirlo. Si tratta delle funzioni seguenti:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\f2 {\b inizializza()}} \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\f2 inviaMessaggio()}  (privata) e i suoi derivati pubblici ({\f2 {\b leggi()}} )\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\f2 {\b leggi()}} \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\f2 cambiaModalita()}  (privata) e i suoi derivati pubblici ({\f2 {\b iniziaRicezione()}} , {\f2 {\b standby()}} , ...)\par}
I codici di errore vengono sempre forniti all'utente sotto forma di {\f2 int}  per non costringerlo a usare questa enum se non vuole (i valori dei codici sono espliciti, dunque l'untente pu\'F2 limitarsi a stamparli e guardare a che errore corrispondono leggendo la definizione dell'{\f2 enum} ). \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valori del tipo enumerato:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ok\:RFM69::Errore}
{\xe \v RFM69::Errore\:ok}
{\qr ok{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nessun errore. \par
}\cell }{\row }
{\xe \v errore\:RFM69::Errore}
{\xe \v RFM69::Errore\:errore}
{\qr errore{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Errore generico \par
}\cell }{\row }
{\xe \v initTroppeRadio\:RFM69::Errore}
{\xe \v RFM69::Errore\:initTroppeRadio}
{\qr initTroppeRadio{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b inizializza()}: Visto che ha una sola ISR questa classe pu\'F2 gestrire una sola radio ma il programma ha provato ad inizializzarne una seconda \par
}\cell }{\row }
{\xe \v initInitSPIFallita\:RFM69::Errore}
{\xe \v RFM69::Errore\:initInitSPIFallita}
{\qr initInitSPIFallita{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b inizializza()}: L'inizializzazione di SPI non \'E8 riuscita \par
}\cell }{\row }
{\xe \v initNessunaRadioConnessa\:RFM69::Errore}
{\xe \v RFM69::Errore\:initNessunaRadioConnessa}
{\qr initNessunaRadioConnessa{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b inizializza()}: Non \'E8 stata trovato nessun dispositivo connesso a SPI con lo Slave Select specificato nel constructor \par
}\cell }{\row }
{\xe \v initVersioneRadioNon0x24\:RFM69::Errore}
{\xe \v RFM69::Errore\:initVersioneRadioNon0x24}
{\qr initVersioneRadioNon0x24{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b inizializza()}: \'C8 stato trovato un dispositivo ma non \'E8 una radio RFM69 \par
}\cell }{\row }
{\xe \v initPinInterruptNonValido\:RFM69::Errore}
{\xe \v RFM69::Errore\:initPinInterruptNonValido}
{\qr initPinInterruptNonValido{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b inizializza()}: Il pin scelto come interrupt non va bene perch\'E9 non \'E8 collegato ad alcun interrupt nel microcontrollore \par
}\cell }{\row }
{\xe \v initErroreImpostazione\:RFM69::Errore}
{\xe \v RFM69::Errore\:initErroreImpostazione}
{\qr initErroreImpostazione{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b inizializza()}: Errore nella scrittura dei registri della radio \par
}\cell }{\row }
{\xe \v inviaMessaggioVuoto\:RFM69::Errore}
{\xe \v RFM69::Errore\:inviaMessaggioVuoto}
{\qr inviaMessaggioVuoto{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inviaMessaggio(): La lunghezza del messaggio \'E8 nulla \par
}\cell }{\row }
{\xe \v inviaTimeoutTxPrecedente\:RFM69::Errore}
{\xe \v RFM69::Errore\:inviaTimeoutTxPrecedente}
{\qr inviaTimeoutTxPrecedente{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inviaMessaggio(): {\b invia()} \'E8 stata chiamata mentre c'era un messaggio in uscita, la funzione ha aspettato per pi\'F9 del tempo massimo di invio di un messaggio e alla fine dell'attesa il messaggio non era ancora partito \par
}\cell }{\row }
{\xe \v leggiNessunMessaggio\:RFM69::Errore}
{\xe \v RFM69::Errore\:leggiNessunMessaggio}
{\qr leggiNessunMessaggio{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b leggi()}: Non c'\'E8 nessun nuovo messaggio da leggere \par
}\cell }{\row }
{\xe \v leggiArrayTroppoCorta\:RFM69::Errore}
{\xe \v RFM69::Errore\:leggiArrayTroppoCorta}
{\qr leggiArrayTroppoCorta{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b leggi()}: l'array in cui la funzion {\f2 {\b leggi()}}  dovrerbbe copiare il messaggio \'E8 troppo corta per contenerlo \par
}\cell }{\row }
{\xe \v messaggioTroppoLungo\:RFM69::Errore}
{\xe \v RFM69::Errore\:messaggioTroppoLungo}
{\qr messaggioTroppoLungo{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b leggi()}: il messaggio \'E8 troppo lungo per essere letto da questa istanza della classe, che \'E8 stata inizializzata con un buffer di dimensione inferiore \par
}\cell }{\row }
{\xe \v modImpossibile\:RFM69::Errore}
{\xe \v RFM69::Errore\:modImpossibile}
{\qr modImpossibile{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cambiaModalita(): Nel contesto in cui \'E8 stata chiamata non \'E8 possibile passare alla modalit\'E0 richiesta \par
}\cell }{\row }
{\xe \v modTimeout\:RFM69::Errore}
{\xe \v RFM69::Errore\:modTimeout}
{\qr modTimeout{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cambiaModalita(): Il cambio di modalit\'E0 non \'E8 avvenuto entro un tempo massimo ampiamente sufficiente. \par
}\cell }{\row }
}
{
Definizione alla linea 402 del file RFM69.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la classe RFM69\par \pard\plain 
{\tc\tcl2 \v RFM69}
{\xe \v RFM69}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver per i moduli radio RFM69. }}\par
{
{\f2 #include <RFM69.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Composti\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Errore}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contenitore dell'{\f2 enum}  {\b Errore::ListaErrori}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membri pubblici\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Constructor\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b RFM69} (uint8_t pinSS, uint8_t pinInterrupt)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor da usare se il pin RESET della radio non \'E8 connesso al uC. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b RFM69} (uint8_t pinSS, uint8_t pinInterrupt, uint8_t pinReset)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor da usare se il pin RESET \'E8 connesso al uC. }{
}\par
}}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Inizializzazione\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funzione di inizializzazione della classe, da chiamare prima di qualsiasi altra \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b inizializza} (uint8_t lunghezzaMaxMessaggio)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inizializza la radio. Deve essere chiamato all'inizio del programma. }{
}\par
}}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Funzioni fondamentali\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Devono essere usate in ogni programma per permettere una comunicazione radio \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b invia} (const uint8_t messaggio[], uint8_t lunghezza)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invia un messaggio. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b inviaConAck} (const uint8_t messaggio[], uint8_t lunghezza)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invia un messaggio con richiesta di ACK. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b inviaFinoAck} (const uint8_t messaggio[], uint8_t lunghezza, uint16_t &tentativi)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invia un messaggio ripetutamente fino alla ricezione di un ACK. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b leggi} (uint8_t messaggio[], uint8_t &lunghezza)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce un messaggio, se ce n'\'E8 uno da leggere. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b iniziaRicezione} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attiva la radio in modo che possa ricevere dei messaggi. }{
}\par
}}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Funzioni importanti\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Probabilmente saranno chiamate in tutti i programmi, ma non sono strettamente indispensabili \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
bool {\b nuovoMessaggio} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controlla se c'\'E8 un nuovo messaggio. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uint8_t {\b dimensioneMessaggio} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce la dimensione dell'ultimo mesasggio. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
bool {\b aspettaAck} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce true se la classe sta aspettando un ACK. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
bool {\b ricevutoAck} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce true se la radio ha ricevuto un ACK. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b rinunciaAck} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simula la ricezione di un ACK. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b standby} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mette la radio in standby (richieder\'E0 1.25mA di corrente) }{
}\par
}}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Funzioni ausiliarie\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utili ma non indispensabili \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b listen} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mette la radio in modalit\'E0 {\f2 listen}  }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b sleep} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mette la radio in modalit\'E0 sleep (richieder\'E0 0.1uA di corrente) }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b sleepDefault} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imposta la modalit\'E0 di default della radio. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b standbyDefault} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imposta la modalit\'E0 di default della radio. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b listenDefault} ()\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b rxDefault} ()\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b impostaTimeoutAck} (uint16_t tempoMs)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imposta il tempo d'attesa massimo per un ACK. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int8_t {\b rssi} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce il valore RSSI per l'ultimo messaggio. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uint8_t {\b tempoRicezione} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce l'"ora" della ricezione dell'ultimo messaggio. }{
}\par
}}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Log\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funzioni utili per monitorare il funzionamento della radio \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b nrMessaggiInviati} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce il numero di messaggi inviati dopo l'ultima inizializzazione. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
int {\b nrMessaggiRicevuti} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce il numero di messaggi ricevuti dopo l'ultima inizializzazione. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b stampaErroreSerial} (HardwareSerial &serial, int errore)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stampa la descrizione di un errore sul monitor seriale. }{
}\par
}}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Debug\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Le seguenti funzioni permettono all'utente di leggere i registri della radio, normalmentenon sono utilizzate \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
void {\b stampaRegistriSerial} (HardwareSerial &Serial)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stampa il valore di tutti i registri della radio sul monitor seriale. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
uint8_t {\b valoreRegistro} (uint8_t indirizzo)\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leggi il valore di un registro della radio. }{
}\par
}}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Destructor, copy constructor, copy operator\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queste funzioni servono per evitare perdite di memoria visto che la classe gestisce una risorsa allocata dinamicamente (il buffer) e non dovrebbe mai essere copiata \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ~RFM69} ()\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b RFM69} (const {\b RFM69} &)=delete\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }{
}\par
}}
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b RFM69} & {\b operator=} (const {\b RFM69} &)=delete\par
{
\pard\plain \s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Operator. }{
}\par
}}
}
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver per i moduli radio RFM69. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Per una descrizione approfondita, cfr. la pagina {\b Driver Arduino per i moduli radio RFM69} \par
}{
Definizione alla linea 32 del file RFM69.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei costruttori e dei distruttori\par
\pard\plain 
{\xe \v RFM69\:RFM69}
{\xe \v RFM69\:RFM69}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RFM69::RFM69 (uint8_t  {\i pinSS}, uint8_t  {\i pinInterrupt})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor da usare se il pin RESET della radio non \'E8 connesso al uC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pinSS} \cell }{Numero del pin Slave Select \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pinInterrupt} \cell }{Numero del pin attraverso il quale la radio genera un interrupt sul uC. Deve ovviamente essere un pin di interrupt. \cell }
{\row }
}
}{
Definizione alla linea 243 del file RFM69_inizializzazione.cpp.}\par
}
{\xe \v RFM69\:RFM69}
{\xe \v RFM69\:RFM69}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RFM69::RFM69 (uint8_t  {\i pinSS}, uint8_t  {\i pinInterrupt}, uint8_t  {\i pinReset})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor da usare se il pin RESET \'E8 connesso al uC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pinSS} \cell }{Numero del pin Slave Select \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pinInterrupt} \cell }{Numero del pin attraverso il quale la radio genera un interrupt sul uC. Deve ovviamente essere un pin di interrupt. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pinReset} \cell }{Numero del pin collegato al pin RESET della radio. \cell }
{\row }
}
}{
Definizione alla linea 247 del file RFM69_inizializzazione.cpp.}\par
}
{\xe \v ~RFM69\:RFM69}
{\xe \v RFM69\:~RFM69}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RFM69::~RFM69 ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dopo aver chiamato il destructor su un'istanza \'E8 possibile chiamare {\f2 {\b inizializza()}}  su un'altra senza ricevere l'errore {\f2 Errore::ListaErrori::initTroppeRadio}  \par
}{
Definizione alla linea 263 del file RFM69_inizializzazione.cpp.}\par
}
{\xe \v RFM69\:RFM69}
{\xe \v RFM69\:RFM69}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RFM69::RFM69 (const {\b RFM69} & ){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deleted perch\'E9 non ha senso copiare una radio \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni membro\par
\pard\plain 
{\xe \v inizializza\:RFM69}
{\xe \v RFM69\:inizializza}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::inizializza (uint8_t  {\i lunghezzaMaxMessaggio})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inizializza la radio. Deve essere chiamato all'inizio del programma. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione esegue le seguenti operazioni in questo ordine:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
controllo che la classe non debba gestire troppe radio (cio\'E9 pi\'F9 di una)\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
prepara l'interfaccia SPI per comunicare con la radio\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
(eventualmente esegue il reset della radio)\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
controlla che un dispositivo sia connesso\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
controlla che il dispositivo sia una radio RFM69\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
collega l'interrupt della radio all'ISR della classe\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
scrive tutti i registri della radio inserendovi le impostazioni stabilite nel file {\b RFM69_impostazioni.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
inizializza alcune variabili della classe\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
crea un buffer di {\f2 lunghezzaMaxMessaggio}  bytes che rester\'E0 allocato fino alla distruzione dell'istanza della classe.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid L'esecuzione di questa funzione richiede alcuni decimi di secondo.\par
Sar\'E0 allocata un'array di {\f2 lunghezzaMaxMessaggio}  bytes.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lunghezzaMaxMessaggio} \cell }{Lunghezza massima dei messagi ricevuti da questa radio. Pu\'F2 essere diverso dalla lunghezza massima dei messaggi inviati (quindi da questo stesso parametro sull'altra radio)\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Codice di errore definito nell'enum {\b RFM69::Errore::ListaErrori} \par
}}{
Definizione alla linea 278 del file RFM69_inizializzazione.cpp.}\par
}
{\xe \v invia\:RFM69}
{\xe \v RFM69\:invia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::invia (const uint8_t  {\i messaggio}[], uint8_t  {\i lunghezza})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invia un messaggio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questa funzione prepara il modulo radio per trasmettere un messaggio. La trasmissione inizier\'E0 alla fine di questa funzione e sar\'E0 terminata dall'isr().\par
Cfr. la descrizione generale della classe {\b RFM69} per informazioni su quando questa funzione pu\'F2 o non pu\'F2 essere usata.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i messaggio[in]} \cell }{array di bytes ({\f2 uint8_t} ) che costituiscono il messaggio \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lunghezza[in]} \cell }{lunghezza del messaggio in bytes\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Codice di errore definito nell'enum {\b RFM69::Errore::ListaErrori} \par
}}{
Definizione alla linea 28 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v inviaConAck\:RFM69}
{\xe \v RFM69\:inviaConAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::inviaConAck (const uint8_t  {\i messaggio}[], uint8_t  {\i lunghezza})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invia un messaggio con richiesta di ACK. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Il messaggio inviato conterr\'E0 una richiesta di ACK, che dovr\'E0 poi essere gestito da altre funzioni. Questa agisce come {\b invia()}, cio\'E9 prepara il modulo radio per trasmettere un messaggio. La trasmissione inizier\'E0 alla fine di questa funzione e sar\'E0 terminata dall'isr().\par
Cfr. la descrizione generale della classe {\b RFM69} per informazioni su quando questa funzione pu\'F2 o non pu\'F2 essere usata.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i messaggio[in]} \cell }{array di bytes ({\f2 uint8_t} ) che costituiscono il messaggio \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lunghezza[in]} \cell }{lunghezza del messaggio in bytes\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Codice di errore definito nell'enum {\b RFM69::Errore::ListaErrori} \par
}}{
Definizione alla linea 36 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v inviaFinoAck\:RFM69}
{\xe \v RFM69\:inviaFinoAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::inviaFinoAck (const uint8_t  {\i messaggio}[], uint8_t  {\i lunghezza}, uint16_t &  {\i tentativi})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invia un messaggio ripetutamente fino alla ricezione di un ACK. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questa funzione invia un messaggio, aspetta l'ACK e se non lo riceve entro il tesmpo specificato in {\f2 {\b impostaTimeoutAck()}}  lo invia di nuovo. Ripete questa operazione per al massimo {\f2 tentativi}  volte, dopo le quali restituir\'E0 1 ({\f2 Errore::ListaErrori::errore} ) se il messaggio non \'E8 ancora stato confermato (quindi probabilmente non \'E8 arrivato). Restituir\'E0 invece 0 ({\f2 Errore::ListaErrori::ok} )subito dopo aver ricvevuto un ACK.\par
Dopo l'esecuzione della funzione {\f2 tentativi}  conterr\'E0 il numero di tentativi effettuati.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i messaggio[in]} \cell }{array di bytes ({\f2 uint8_t} ) che costituiscono il messaggio \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lunghezza[in]} \cell }{lunghezza del messaggio in bytes \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tentativi[in/out]} \cell }{/b prima: numero di tentativi da effettuare prima di rinunciare alla trasmissione del messaggio /b dopo: numero di tentativi effettuati\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Codice di errore definito nell'enum {\b RFM69::Errore::ListaErrori} \par
}}{
Definizione alla linea 45 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v leggi\:RFM69}
{\xe \v RFM69\:leggi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::leggi (uint8_t  {\i messaggio}[], uint8_t &  {\i lunghezza})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce un messaggio, se ce n'\'E8 uno da leggere. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Il messaggio \'E8 trasferito dalla radio al microcontrollore gi\'E0 nell'isr(). Questa funzione restituisce all'utente il contenuto del buffer della classe senza accedere alla radio. Deve tuttavia utilizzarla se il messaggio ricevuto contiene una richiesta di ACK. In tal caso alla fine della funzione viene iniziata la trasmissione dell'ack. Se \'E8 gi\'E0 in corso una trasmissione (funzione {\b invia()} chiamata prima di {\b leggi()}, normalmente non dovrebbe succedere), {\b leggi()} aspetter\'E0 fino alla fine della trasmissione prima di inviare l'ack; dopo 50 ms interromper\'E0 ogni eventuale trasmissione.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i messaggio} \cell }{array[out] in cui sar\'E0 copiato il messaggio. Deve essere almeno grande quanto il messaggio, del quale si pu\'F2 ottenere la lunghezza con la funzione {\b dimensioneMessaggio()}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lunghezza} \cell }{[in/out] lunghezza di messaggio. Dopo l'esecuzione della funzione corrisponder\'E0 esattamente alla dimensione del messaggio.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Codice di errore definito nell'enum {\b RFM69::Errore::ListaErrori} \par
}}{
Definizione alla linea 133 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v iniziaRicezione\:RFM69}
{\xe \v RFM69\:iniziaRicezione}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::iniziaRicezione ()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attiva la radio in modo che possa ricevere dei messaggi. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Per riceve la radio deve essere in modalit\'E0 ricezione. Nelle altre modalit\'E0 non si accorger\'E0 nemmeno di aver ricevuto un messaggio. Quindi se non si chiama questa funzione sulla radio ricevente tutti i messaggi inviatile andranno persi. \par
}{
Definizione alla linea 193 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v nuovoMessaggio\:RFM69}
{\xe \v RFM69\:nuovoMessaggio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RFM69::nuovoMessaggio ()}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controlla se c'\'E8 un nuovo messaggio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 true}  se il buffer della classe contiene un nuovo messaggio. \par
}}{
Definizione alla linea 205 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v dimensioneMessaggio\:RFM69}
{\xe \v RFM69\:dimensioneMessaggio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RFM69::dimensioneMessaggio ()}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce la dimensione dell'ultimo mesasggio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid la dimensione dell'utlimo messaggio ricevuto in bytes \par
}}{
Definizione alla linea 213 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v aspettaAck\:RFM69}
{\xe \v RFM69\:aspettaAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RFM69::aspettaAck ()}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce true se la classe sta aspettando un ACK. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 true}  se la classe sta aspettando un ack, cio\'E9 se ha inviato un messaggio con richiesta di ACK e non lo ha ancora ricevuto.\par
}Questa funzione contiene un sistema di timeout. Dopo lo scadere del tempo restituisce {\f2 false}  anche se non ha ricevuto nessun ack.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Avvertimento:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 false}  ha due signifcati opposti:{
\par
\pard\plain \s92\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab L'ACK \'E8 stato ricevuto\par
\pard\plain \s92\fi-360\li1080\widctlpar\fs20\cgrid 
2.\tab L'ACK non \'E8 arrivato, ma il tempo massimo di attesa \'EA scaduto. Per questo \'E8 necessario chiamare {\i sempore}  anche {\b ricevutoAck()}. \par}
}}{
Definizione alla linea 239 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v ricevutoAck\:RFM69}
{\xe \v RFM69\:ricevutoAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RFM69::ricevutoAck ()}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce true se la radio ha ricevuto un ACK. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 true}  se la radio ha ricevuto un ACK per l'ultimo messaggio inviato\par
}Questa funzione non aspetta l'ACK, dice solo se \'E8 arrivato, quindi chiamata immediatamente dopo {\f2 {\b invia()}}  restituisce sempre {\f2 false} . Normalmente \'E8 perci\'F2 usata insieme a {\b aspettaAck()} (cio\'E9 subito dopo di essa).\par
Esempio: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid for(int i = 0; i < 3; i++) \{\par
    invia();\par
    aspettaAck();\par
    if(ricevutoAck()) break;\par
\}\par
if(!ricevutoAck()) \{\par
    print("Trasmissione messaggio fallita");\par
\}\par
}
 \par
}{
Definizione alla linea 255 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v rinunciaAck\:RFM69}
{\xe \v RFM69\:rinunciaAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::rinunciaAck ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simula la ricezione di un ACK. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Normalmente questza funzione non dovrebbe mai essere chiamata.\par
}Questa funzione \'E8 chiamata automaticamente da {\b aspettaAck()} allo scadere del tempo massimo. Pu\'F2 essere usata dall'utente per terminare l'attesa prima di quella scadenza. In caso di invio di un secondo messaggio prima della ricezione dell'ACK (ad es. per trasmettere un'informazione urgente) \'E8 chiamata automaticamente.\par
Se il vero ACK dovesse arrivare dopo l'esecuzione di questa funzione non avr\'E0 nessun effetto. \par
}{
Definizione alla linea 262 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v standby\:RFM69}
{\xe \v RFM69\:standby}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::standby ()}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mette la radio in standby (richieder\'E0 1.25mA di corrente) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La modalit\'E0 {\f2 standby}  serve per mettere la radio in pausa per qualche secondo. Per pause pi\'F9 lunghe conviene usare {\f2 {\b sleep()}} , soprattutto se l'intero dispositivo deve essere messo in standby per un certo periodo. Se invece il dispositivo utilizza relativamente tanta corrente durante lo standby della radio (ad es. ha accesi diversi LED, un motore, ...) la differenza tra {\f2 {\b sleep()}}  e {\f2 {\b standby()}}  non \'E8 rilevante. \par
}{
Definizione alla linea 530 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v listen\:RFM69}
{\xe \v RFM69\:listen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::listen ()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mette la radio in modalit\'E0 {\f2 listen}  }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 listen}  \'E8 una modalit\'E0 particolare che consiste in realt\'E0 nella continua alternanza tra due modalit\'E0: {\f2 rx}  (ricezione) e {\f2 idle}  (una specie di sleep adattato alla modalit\'E0 listen). \par
}{
Definizione alla linea 527 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v sleep\:RFM69}
{\xe \v RFM69\:sleep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::sleep ()}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mette la radio in modalit\'E0 sleep (richieder\'E0 0.1uA di corrente) }}\par
{
Definizione alla linea 533 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v sleepDefault\:RFM69}
{\xe \v RFM69\:sleepDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::sleepDefault ()}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imposta la modalit\'E0 di default della radio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questa funzione non cambia la modalit\'E0 attuale!\par
Ad es.{\f2 {\b sleepDefault()};}  non corrisponde a {\f2 {\b sleepDefault()}; {\b sleep()};}  \par
}{
Definizione alla linea 537 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v standbyDefault\:RFM69}
{\xe \v RFM69\:standbyDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::standbyDefault ()}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imposta la modalit\'E0 di default della radio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questa funzione non cambia la modalit\'E0 attuale!\par
Ad es.{\f2 {\b sleepDefault()};}  non corrisponde a {\f2 {\b sleepDefault()}; {\b sleep()};}  \par
}{
Definizione alla linea 540 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v listenDefault\:RFM69}
{\xe \v RFM69\:listenDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::listenDefault ()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definizione alla linea 543 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v rxDefault\:RFM69}
{\xe \v RFM69\:rxDefault}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::rxDefault ()}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definizione alla linea 546 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v impostaTimeoutAck\:RFM69}
{\xe \v RFM69\:impostaTimeoutAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::impostaTimeoutAck (uint16_t  {\i tempoMs})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imposta il tempo d'attesa massimo per un ACK. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tempoMs} \cell }{Tempo di attesa in millisecondi per la funzione {\f2 {\b aspettaAck()}} . Dopo aver atteso per questo tempo la funzione terminer\'E0 senza aver ricevuto un ACK. \cell }
{\row }
}
}{
Definizione alla linea 550 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v rssi\:RFM69}
{\xe \v RFM69\:rssi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t RFM69::rssi ()}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce il valore RSSI per l'ultimo messaggio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Received Signal Strength Indicator (RSSI) per l'ultimo messaggio ricevuto. \par
}}{
Definizione alla linea 219 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v tempoRicezione\:RFM69}
{\xe \v RFM69\:tempoRicezione}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RFM69::tempoRicezione ()}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce l'"ora" della ricezione dell'ultimo messaggio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Il tempo in millisecondi dall'inizio del programma a cui \'E8 stata attivata l'{\f2 isr()}  che segna la finem della ricezione del messaggio. \par
}}{
Definizione alla linea 224 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v nrMessaggiInviati\:RFM69}
{\xe \v RFM69\:nrMessaggiInviati}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::nrMessaggiInviati (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce il numero di messaggi inviati dopo l'ultima inizializzazione. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Il numero di messaggi inviati dopo l'ultima inizializzazione \par
}}{
Definizione alla linea 311 del file RFM69.h.}\par
}
{\xe \v nrMessaggiRicevuti\:RFM69}
{\xe \v RFM69\:nrMessaggiRicevuti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RFM69::nrMessaggiRicevuti (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restituisce il numero di messaggi ricevuti dopo l'ultima inizializzazione. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Il numero di messaggi ricevuti dopo l'ultima inizializzazione \par
}}{
Definizione alla linea 315 del file RFM69.h.}\par
}
{\xe \v stampaErroreSerial\:RFM69}
{\xe \v RFM69\:stampaErroreSerial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::stampaErroreSerial (HardwareSerial &  {\i serial}, int  {\i errore})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stampa la descrizione di un errore sul monitor seriale. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questa funzione permette di stampare sul monitor seriale la causa di un errore segnalato da una funzione di questa classe.\par
Funziona per i codici di errore definiti dall'{\f2 enum}  {\b Errore::ListaErrori}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Le stringhe di testo sono salvate nella memoria flash (del programma), non nella SRAM (delle variabili), e pesano circa 0.5kB.\par
Siccome contiene alcune centinaia di caratteri, questa funzione "pesa" pi\'F9 delle altre. Si consiglia perci\'F2 di usarla solo in fase di debug per poi liberare spazio quando la radio funziona.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i serial} \cell }{un oggetto di {\f2 HardwareSerial} . Tipicamente sar\'E0 {\f2 Serial}  (o ev. {\f2 Serial1}  ecc. se si usa un Arduino Mega).  errore codice di errore restituito da una delle funzioni sopra elencate. \cell }
{\row }
}
}{
Definizione alla linea 557 del file RFM69_comunicazione.cpp.}\par
}
{\xe \v stampaRegistriSerial\:RFM69}
{\xe \v RFM69\:stampaRegistriSerial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RFM69::stampaRegistriSerial (HardwareSerial &  {\i Serial})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stampa il valore di tutti i registri della radio sul monitor seriale. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Strampa il valore di tutti i registri della radio \par
}{
Definizione alla linea 445 del file RFM69_inizializzazione.cpp.}\par
}
{\xe \v valoreRegistro\:RFM69}
{\xe \v RFM69\:valoreRegistro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RFM69::valoreRegistro (uint8_t  {\i indirizzo})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leggi il valore di un registro della radio. }}\par
{
Definizione alla linea 473 del file RFM69_inizializzazione.cpp.}\par
}
{\xe \v operator=\:RFM69}
{\xe \v RFM69\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RFM69}& RFM69::operator= (const {\b RFM69} & ){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy Operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deleted perch\'E9 non ha senso copiare una radio \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa classe \'E8 stata generata a partire dai seguenti file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_comunicazione.cpp}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/noe/Documents/Robot/Librerie/RFM69/RFM69/{\b RFM69_inizializzazione.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentazione dei file{\tc \v Documentazione dei file}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/Esempi/Esempio_base.cpp\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/Esempi/Esempio_base.cpp}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/Esempi/Esempio_base.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esempio semplice ma abbastanza completo dell'utilizzo della classe {\b RFM69}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include "RFM69.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definizioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MODULO_r}{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LED}\~ 4{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funzioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setup} (){\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b loop} (){\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabili\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b RFM69} {\b radio} (2, 3){\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esempio semplice ma abbastanza completo dell'utilizzo della classe {\b RFM69}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questo programma stabilisce una comunicazione unidirezionale ma con ACK tra due radio. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69.h\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69.h}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header della classe {\b RFM69}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include <SPI.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Composti\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RFM69}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver per i moduli radio RFM69. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RFM69::Errore}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contenitore dell'{\f2 enum}  {\b Errore::ListaErrori}. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header della classe {\b RFM69}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_comunicazione.cpp\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_comunicazione.cpp}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_comunicazione.cpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione delle principali funzioni pubbliche della classe {\b RFM69}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RFM69.h"}\par
{\f2 #include "RFM69_registri.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione delle principali funzioni pubbliche della classe {\b RFM69}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questo file contiene l'implementazione della maggior parte delle funzioni pubbliche della classe. Ne sono escluse solo le funzioni di impostazione della radio, che utilizzano le costanti definite nel file {\b RFM69_impostazioni.h} che non \'E8 incluso in questo file (le funzioni qui non devono usare quelle costanti).\par
Il file \'E8 suddiviso in 5 sezioni:\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Invio\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Ricezione\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab ISR\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab ACK\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
5.\tab Impostazioni \par}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_costanti_impostazione.h\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_costanti_impostazione.h}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_costanti_impostazione.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costanti per l'impostazione della radio RFM69. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costanti per l'impostazione della radio RFM69. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questo file contiene le scelte possibili per tutte le impostazioni dela radio {\b RFM69} sotto forma di costanti o macro. Le costanti qui definite sono usate nel file {\b RFM69_impostazioni.h}, le macro nel file RFM69_inizializzazioe.h \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_impostazioni.h\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_impostazioni.h}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_impostazioni.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
File di configurazione del modulo radio RFM69. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
File di configurazione del modulo radio RFM69. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questo file contiene una lunga serie di costanti {\f2 #define} d tramite le quali \'E8 possibile modificare tutte le impostazioni della radio. Il file \'E8 {\f2 #include} d in {\b RFM69_inizializzazione.cpp}, dove le sue costanti saranno usate per scrivere i registri della radio.\par
Tutte le costanti seguenti possono essere modificate dall'utente.\par
Questo file deve restare nella posizione in cui si trova (cio\'E8 assieme al resto dell'implementazione della classe {\b RFM69}). \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_inizializzazione.cpp\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_inizializzazione.cpp}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_inizializzazione.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione delle funzioni di inizializzazione della classe {\b RFM69}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RFM69.h"}\par
{\f2 #include "RFM69_registri.h"}\par
{\f2 #include "RFM69_impostazioni.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione delle funzioni di inizializzazione della classe {\b RFM69}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In questo file sono raggruppate tutte le funzioni di inizializzazione Il file \'E8 suddiviso in 5 sezioni:\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Completamento delle impostazioni\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Interpretazione dei dati del file di impostazione\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Definizione dei membri static\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Constructor e destructor\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
5.\tab Inizializzazione\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
6.\tab Debug \par}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_registri.h\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_registri.h}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_registri.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registri della radio RFM69. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definizioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_00_FIFO}\~ 0x00{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_01_OP_MODE}\~ 0x01{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_02_DATA_MODUL}\~ 0x02{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_03_BITRATE_MSB}\~ 0x03{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_04_BITRATE_LSB}\~ 0x04{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_05_FDEV_MSB}\~ 0x05{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_06_FDEF_LSB}\~ 0x06{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_07_FRF_MSB}\~ 0x07{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_08_FRF_MID}\~ 0x08{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_09_FRF_LSB}\~ 0x09{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_0A_OSC_1}\~ 0x0A{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_0B_AFC_CTRL}\~ 0x0B{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_0D_LISTEN_1}\~ 0x0D{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_0E_LISTEN_2}\~ 0x0E{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_0F_LISTEN_3}\~ 0x0F{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_10_VERSION}\~ 0x10{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_11_PA_LEVEL}\~ 0x11{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_12_PA_RAMP}\~ 0x12{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_13_OCP}\~ 0x13{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_18_LNA}\~ 0x18{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_19_RX_BW}\~ 0x19{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_1A_AFC_BW}\~ 0x1A{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_1B_OOK_PEAK}\~ 0x1B{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_1C_OOK_AVG}\~ 0x1C{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_1D_OOK_FIX}\~ 0x1D{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_1E_AFC_FEI}\~ 0x1E{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_1F_AFC_MSB}\~ 0x1F{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_20_AFC_LSB}\~ 0x20{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_21_FEI_MSB}\~ 0x21{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_22_FEI_LSB}\~ 0x22{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_23_RSSI_CONFIG}\~ 0x23{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_24_RSSI_VALUE}\~ 0x24{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_25_DIO_MAPPING_1}\~ 0x25{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_26_DIO_MAPPING_2}\~ 0x26{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_27_IRQ_FLAGS_1}\~ 0x27{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_28_IRQ_FLAGS_2}\~ 0x28{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_29_RSSI_TRESH}\~ 0x29{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_2A_RX_TIMEOUT_1}\~ 0x2A{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_2B_RX_TIMEOUT_2}\~ 0x2B{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_2C_PREAMBLE_MSB}\~ 0x2C{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_2D_PREAMBLE_LSB}\~ 0x2D{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_2E_SYNC_CONFIG}\~ 0x2E{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_2F_SYNC_VALUE_1}\~ 0x2F{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_30_SYNC_VALUE_2}\~ 0x30{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_31_SYNC_VALUE_3}\~ 0x31{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_32_SYNC_VALUE_4}\~ 0x32{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_33_SYNC_VALUE_5}\~ 0x33{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_34_SYNC_VALUE_6}\~ 0x34{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_35_SYNC_VALUE_7}\~ 0x35{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_36_SYNC_VALUE_8}\~ 0x36{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_37_PACKET_CONFIG_1}\~ 0x37{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_38_PAYLOAD_LENGHT}\~ 0x38{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_39_NODE_ADRS}\~ 0x39{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_3A_BROADCAST_ADRS}\~ 0x3A{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_3B_AUTO_MODES}\~ 0x3B{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_3C_FIFO_TRESH}\~ 0x3C{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_3D_PACKET_CONFIG_2}\~ 0x3D{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_3E_AES_KEY_1}\~ 0x3E{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_3F_AES_KEY_2}\~ 0x3F{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_40_AES_KEY_3}\~ 0x40{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_41_AES_KEY_4}\~ 0x41{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_42_AES_KEY_5}\~ 0x42{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_43_AES_KEY_6}\~ 0x43{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_44_AES_KEY_7}\~ 0x44{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_45_AES_KEY_8}\~ 0x45{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_46_AES_KEY_9}\~ 0x46{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_47_AES_KEY_10}\~ 0x47{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_48_AES_KEY_11}\~ 0x48{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_49_AES_KEY_12}\~ 0x49{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_4A_AES_KEY_13}\~ 0x4A{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_4B_AES_KEY_14}\~ 0x4B{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_4C_AES_KEY_15}\~ 0x4C{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_4D_AES_KEY_16}\~ 0x4D{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_4E_TEMP_1}\~ 0x4E{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_4F_TEMP_2}\~ 0x4F{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_58_TEST_LNA}\~ 0x58{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_5A_TEST_PA_1}\~ 0x5A{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_5C_TEST_PA_2}\~ 0x5C{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_6F_TEST_DAGC}\~ 0x6F{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_71_TEST_AFC}\~ 0x71{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RFM69_RESERVED}(x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_ULTIMO_REGISTRO}\~ 0x71{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_MODE_READY}\~ 0x80{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_RX_READY}\~ 0x40{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_TX_READY}\~ 0X20{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_PLL_LOCK}\~ 0X10{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_RSSI}\~ 0X08{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_TIMEOUT}\~ 0X04{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_AUTO_MODE}\~ 0X02{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_1_SYNC_ADDR_MATCH}\~ 0X01{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_2_FIFO_FULL}\~ 0x80{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_2_FIFO_NOT_EMPTY}\~ 0x40{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_2_FIFO_LEVEL}\~ 0x20{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_2_FIFO_OVERRUN}\~ 0x10{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_2_PACKET_SENT}\~ 0x08{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_2_PAYLOAD_READY}\~ 0x04{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RFM69_FLAGS_2_CRC_OK}\~ 0x02{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registri della radio RFM69. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questo file contiene l'elenco {\f2 #define} d dei registri della radio RFM69. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle definizioni\par
\pard\plain 
{\xe \v RFM69_RESERVED\:RFM69_registri.h}
{\xe \v RFM69_registri.h\:RFM69_RESERVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RFM69_RESERVED( x)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valore:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( \\\par
    x == 0x0C || \\\par
    (0x13 < x && x < 0x18) || \\\par
    (0x4F < x && x < 0x58) || \\\par
    x == 0x59 || \\\par
    x == 0x5B || \\\par
    (0x5c < x && x < 0x6F) || \\\par
    (0x6F < x && x < 0x71) || \\\par
0x71 < x )\par
}
{
Definizione alla linea 103 del file RFM69_registri.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_SPI.cpp\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_SPI.cpp}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/RFM69/RFM69_SPI.cpp}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione della comunicazione SPI con la radio RFM69. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RFM69.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementazione della comunicazione SPI con la radio RFM69. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Il file contiene l'implementazione della classe che gestisce la comunicazione tra la radio RFM69 e il microcontrollore. Questa classe \'E8 un membro privato della classe {\b RFM69}. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file /Users/noe/Documents/Robot/Librerie/RFM69/Test/main.cpp\par \pard\plain 
{\tc\tcl2 \v /Users/noe/Documents/Robot/Librerie/RFM69/Test/main.cpp}
{\xe \v /Users/noe/Documents/Robot/Librerie/RFM69/Test/main.cpp}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esempio semplice ma abbastanza completo dell'utilizzo della classe {\b RFM69}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include "RFM69.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definizioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MODULO_r}{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LED}\~ 4{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funzioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setup} (){\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b loop} (){\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabili\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b RFM69} {\b radio} (2, 3){\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esempio semplice ma abbastanza completo dell'utilizzo della classe {\b RFM69}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Questo programma stabilisce una comunicazione unidirezionale ma con ACK tra due radio. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Indice\par 
\pard\plain 
{\tc \v Indice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}